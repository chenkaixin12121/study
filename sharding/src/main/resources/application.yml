spring:
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
  shardingsphere:
    # 数据源配置
    datasource:
      names: ds0,ds1
      ds0:
        driver-class-name: com.mysql.cj.jdbc.Driver
        type: com.zaxxer.hikari.HikariDataSource
        jdbcUrl: jdbc:mysql://localhost:3306/ds0?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
        username: root
        password: root
      ds1:
        driver-class-name: com.mysql.cj.jdbc.Driver
        type: com.zaxxer.hikari.HikariDataSource
        jdbcUrl: jdbc:mysql://localhost:3306/ds1?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
        username: root
        password: root
    sharding:
      # 默认数据源，未分片的表存在这
      default-data-source-name: ds0
      tables:
        # 分片表
        t_order:
          # 真实数据节点
          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}
          key-generator:
            # 自增主键
            column: order_id
            # 主键 id 生成，使用雪花算法
            type: SNOWFLAKE
            props:
              worker:
                # 工作机器唯一 id
                id: 0000
          # 分库策略
          database-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: ds$->{user_id % 2}
          # 分表策略
          table-strategy:
            inline:
              # 分表分片键
              sharding-column: order_id
              # 分表算法
              algorithm-expression: t_order_$->{order_id % 2}
        t_order_item:
          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}
          key-generator:
            column: item_id
            type: SNOWFLAKE
            props:
              worker:
                id: 0000
          database-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: ds$->{order_id % 2}
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: t_order_item_$->{order_id % 2}
      # 绑定两张表
      binding-tables: t_order, t_order_item
    # 开启 sql 解析日志
    props:
      sql:
        show: true